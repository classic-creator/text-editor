{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/about.js","components/alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","htmlFor","placeholder","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","backgroundColor","onChange","event","target","value","rows","newtext","toUpperCase","showAlert","toLowerCase","split","map","upper","replace","charAt","join","newText","length","defaultpros","About","Alert","alert","role","msg","data-bs-dismiss","App","setalert","message","setTimeout","_useState3","_useState4","setmode","document","body","components_alert","react_router","path","element","about","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.d32ca8f0.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {  NavLink } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <NavLink className=\"navbar-brand\" to=\"/\">{props.title}</NavLink>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link active\"  aria-current=\"page\" to=\"/\">Home</NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/about\">{props.aboutText}</NavLink>\r\n              </li>  \r\n            </ul>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`} >\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\"   id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Eye Mode</label>\r\n          </div>\r\n            <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n  )\r\n}\r\nNavbar.defaultpros={\r\n    title:'set title here',\r\n    aboutText:'aboutstart'\r\n}\r\n\r\nNavbar.propTypes={\r\n title: PropTypes.string,\r\n aboutText: PropTypes.string\r\n}\r\n","import React, {useState}from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n \r\n  \r\n \r\n  const [text,setText]=useState('')\r\n\r\n  const handleUpClick=()=>{\r\n    // console.log(\"uppercase click\" + text)\r\n    let newtext=text.toUpperCase()\r\n    setText(newtext)\r\n    props.showAlert('convert to upper case', 'success')\r\n\r\n}\r\nconst handleLowClick=()=>{\r\n  // console.log(\"uppercase click\" + text)\r\n  let newtext=text.toLowerCase();\r\n  setText(newtext)\r\n  props.showAlert('convert to lower case', 'success')}\r\n\r\n  const handleExtraSpace=()=>{\r\n\r\n    let newText=text.split(/[ ]+/)\r\n    setText(newText.join(' '))\r\n    props.showAlert('remove extra space', 'success')\r\n  }\r\n\r\n  const handleFirstLtr=()=>{\r\n  \r\n  let result=text.toLowerCase().split(' ');\r\n  let newtext=result.map(function(upper){\r\n    return upper.replace(upper.charAt(0),upper.charAt(0).toUpperCase()) \r\n  })\r\n  setText(newtext.join(\" \"))\r\n  props.showAlert('convert to first latter uppercase case', 'success')\r\n}\r\n \r\n  const handleLineFirstLtr=()=>{\r\n  \r\n    let result=text.toLowerCase().split('. ');\r\n    let newtext=result.map(function(upper){\r\n      return upper.replace(upper.charAt(0),upper.charAt(0).toUpperCase()) \r\n    })\r\n    setText(newtext.join(\". \"))\r\n    props.showAlert('convert to first latter of a line to upper case', 'success')}\r\n\r\n  const handleClearClick=()=>{\r\n   let newtext=(\"\")\r\n    \r\n    setText(newtext)\r\n    props.showAlert('clear all text', 'success')}\r\n\r\n\r\n  const handleOnChange=(event)=>{\r\n    // console.log(\"on change\");\r\n    setText(event.target.value)\r\n  }\r\n\r\n\r\n  return (\r\n  <>\r\n  <h1 style={{color:props.mode==='dark'?'white':'black'}}>{props.heading}</h1>\r\n  <div className=\" container mb-3\">\r\n    <textarea className=\"form-control\" style={{backgroundColor:props.mode==='dark'?'gray':'white',color:props.mode==='dark'?'white':'black'}} onChange={handleOnChange} value={text} id=\"exampleFormControlTextarea1\" rows=\"14\" ></textarea>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>uppercase</button>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>lowercase</button>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>clear</button>\r\n    {/* <button className=\"btn btn-primary mx-2\" onClick={handlstyleClick}>{color}</button> */}\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleFirstLtr}>first later capital</button>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpace}>remove extra space</button>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleLineFirstLtr}>line 1stlater capital</button>\r\n  </div>\r\n  <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n    <h1>your text summery</h1>\r\n    <p>{text.split(\" \").length} words and {text.length} cheracters</p>\r\n    <p> you need {0.008*text.split(\" \").length} minut to read all text</p>\r\n    <h1>preview</h1>\r\n    <p>{text.length>0?text:'Entrt text in the box for preview'}</p>\r\n  </div>\r\n  </>\r\n  )\r\n}\r\n","import React from 'react'\r\nfunction About() {\r\n    return(\r\n        <div className=\"container\">\r\n        <h1>about about</h1>\r\n       </div>\r\n    )\r\n  \r\n   \r\n}\r\nexport default About","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{props.alert.type}</strong>:{props.alert.msg}\r\n    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Alert","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/about';\nimport React,{useState} from 'react'\nimport Alert from \"./components/alert\";\nimport { BrowserRouter,Route,Routes } from \"react-router-dom\";\n\n\nfunction App() {\n  const [alert, setalert] = useState(null)\n  const showAlert=(message,type)=>{\n    setalert(\n      { msg: message,\n        type: type,}  \n    )\n    setTimeout(() => {\n      setalert(null)\n    }, 1500);\n\n  }\n  const [mode, setmode] = useState('light');\n  const darkMode=()=>{\n    if (mode===\"light\") {\n      \n      setmode('dark')\n      document.body.style.backgroundColor='gray';\n      showAlert('dark mode enabled','success')\n    }\n    else {\n      setmode('light')\n      document.body.style.backgroundColor='white';\n      showAlert('light mode enabled','success')\n    }\n\n  }\n  return (\n    <>\n    < BrowserRouter>\n      <Navbar title=\"text editor\" aboutText=\"about us\" toggleMode={darkMode} mode={mode}/>\n      <Alert alert={alert}/>\n      <div className=\"container\">\n    \n    \n          <Routes>\n            <Route path=\"/about\" element={<About />}>\n            </Route>\n            <Route path=\"/\" element={<TextForm heading=\"Enter text to analyze\"  mode={mode} showAlert={showAlert} />}>\n            </Route>\n          </Routes>\n      \n      </div>\n \n </BrowserRouter>\n </>\n  ); \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}